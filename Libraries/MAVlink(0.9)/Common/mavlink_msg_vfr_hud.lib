/*** BeginHeader mavlink_msg_vfr_hud_send */
#define MAVLINK_MSG_ID_VFR_HUD 74
void mavlink_msg_vfr_hud_send(void);
/*** EndHeader */
void mavlink_msg_vfr_hud_send(void)
{
   auto char pkt[20 + MAVLINK_NUM_NON_PAYLOAD_BYTES];
   auto unsigned int checksum;
   auto int i;
   auto char payload_length;
   char float_tmp[4];

   //paledon(Tx_led);
   payload_length = 20;

    pkt[0] = MAVLINK_STX; //Mavlink Header
    pkt[1] = payload_length; //Payload length
    pkt[2] = packet_sequence; //Packet sequence
    pkt[3] = mavlink_system.sysid; //System ID
    pkt[4] = mavlink_system.compid; //Component ID
    pkt[5] = MAVLINK_MSG_ID_VFR_HUD; //Message ID

    memcpy(float_tmp, &m_floats[MF_INDICATED_AIRSPEED], sizeof(m_floats[MF_INDICATED_AIRSPEED]));
    pkt[6] = float_tmp[3];
    pkt[7] = float_tmp[2];
    pkt[8] = float_tmp[1];
    pkt[9] = float_tmp[0];
    memcpy(float_tmp, &m_floats[MF_GPS_SPEED], sizeof(m_floats[MF_GPS_SPEED]));
    pkt[10] = float_tmp[3];
    pkt[11] = float_tmp[2];
    pkt[12] = float_tmp[1];
    pkt[13] = float_tmp[0];

    pkt[14] = 0x00;  //Current heading in degrees, in compass units (0..360, 0=north)
    pkt[15] = 0x00;

    pkt[16] = 0x00;  //Current throttle setting in integer percent, 0 to 100
    pkt[17] = 0x00;

    memcpy(float_tmp, &m_floats[MF_ALT_MSL], sizeof(m_floats[MF_ALT_MSL]));
    pkt[18] = float_tmp[3];
    pkt[19] = float_tmp[2];
    pkt[20] = float_tmp[1];
    pkt[21] = float_tmp[0];
    //memcpy(float_tmp, &m_floats[MF_CLIMB_RATE], sizeof(m_floats[MF_CLIMB_RATE]));
    pkt[22] = 0x00;  //float_tmp[3];
    pkt[23] = 0x00;  //float_tmp[2];
    pkt[24] = 0x00;  //float_tmp[1];
    pkt[25] = 0x00;  //float_tmp[0];


    checksum = crc_calculate((uint8_t*)((void*)pkt), payload_length + MAVLINK_CORE_HEADER_LEN);
    pkt[26] = (uint8_t)(checksum & 0xFF);//0x36; 	//chk_a
    pkt[27] = (uint8_t)(checksum >> 8);//0x83;  //chk_b


    for(i = 0; i < (payload_length + 8); i++)
	{
		serFputc(pkt[i]);
	}
   packet_sequence++;
   //paledoff(Tx_led);
}//end mavlink_msg_vfr_hud_send