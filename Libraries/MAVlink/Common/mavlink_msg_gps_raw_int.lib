/*** BeginHeader mavlink_msg_gps_raw_int_send */
#define MAVLINK_MSG_ID_GPS_RAW_INT 24
void mavlink_msg_gps_raw_int_send(char fix_type);
/*** EndHeader */
void mavlink_msg_gps_raw_int_send(char fix_type)
{
   auto char pkt[30 + MAVLINK_NUM_NON_PAYLOAD_BYTES];
   auto unsigned int checksum;
   auto int i;
   auto char payload_length;
   long temp_long_gps;
   int temp_int_gps;
   auto unsigned int temp_uint_gps;

   //paledon(Tx_led);
   payload_length = 30;

    pkt[0] = MAVLINK_STX; //Mavlink Header
    pkt[1] = payload_length; //Payload length
    pkt[2] = packet_sequence; //Packet sequence
    pkt[3] = mavlink_system.sysid; //System ID
    pkt[4] = mavlink_system.compid; //Component ID
    pkt[5] = MAVLINK_MSG_ID_GPS_RAW_INT; //Message ID


    pkt[6] = 0;   //usec
    pkt[7] = 0;
    pkt[8] = 0;
    pkt[9] = 0;
    pkt[10] = 0;
    pkt[11] = 0;
    pkt[12] = 0;
    pkt[13] = 0;

      temp_long_gps = (long)(m_floats[MF_GPS_LAT]*1e7);
    memcpy(&pkt[14], &temp_long_gps, 4);
    	temp_long_gps = (long)(m_floats[MF_GPS_LON]*1e7);
    memcpy(&pkt[18], &temp_long_gps, 4);
    	temp_long_gps = (long)(m_floats[MF_ALT_MSL]*1000);
    memcpy(&pkt[22], &temp_long_gps, 4);

    temp_uint_gps = (unsigned int)(m_floats[MF_GPS_HDOP]*100);
    memcpy(&pkt[26],&temp_uint_gps,2);

    pkt[28] = 0;   //epv
    pkt[29] = 0;

    temp_int_gps = (int)m_floats[MF_GPS_SPEED];
    memcpy(&pkt[30], &temp_int_gps, sizeof(temp_int_gps));

    temp_int_gps = (int)(m_floats[MF_GPS_HEADING]*RAD2DEG);
    if (m_floats[MF_GPS_HEADING] < 0)
    	temp_int_gps += 360;
    temp_int_gps *= 100;
	 memcpy(&pkt[32], &temp_int_gps, sizeof(temp_int_gps));

    pkt[34] = m_bytes[MB_GPS_FIX_QUALITY];
    pkt[35] = m_bytes[MB_GPS_NUM_SATELLITES]; //num of sats

    checksum = crc_calculate((uint8_t*)((void*)pkt), payload_length + MAVLINK_CORE_HEADER_LEN);
    crc_accumulate(g_crc_seeds[MAVLINK_MSG_ID_GPS_RAW_INT],&checksum); //add seed
    pkt[36] = (uint8_t)(checksum & 0xFF);//0x36; 	//chk_a
    pkt[37] = (uint8_t)(checksum >> 8);//0x83;  //chk_b


#ifdef USE_HIL
   write_packet(&pkt[0],payload_length,SERIAL_PORT_A);
#else
   write_packet(&pkt[0],payload_length,SERIAL_PORT_F);
#endif
   packet_sequence++;
   //paledoff(Tx_led);
}//end mavlink_msg_gps_raw_int_send