/*** BeginHeader mavlink_msg_mission_rqst_send */
#define MAVLINK_MSG_ID_MISSION_REQUEST 40
void mavlink_msg_mission_rqst_send(unsigned int cmd_number);
/*** EndHeader */
void mavlink_msg_mission_rqst_send(unsigned int cmd_number)
{
   auto char pkt[4 + MAVLINK_NUM_NON_PAYLOAD_BYTES];
   auto unsigned int checksum;
   auto int i;
   auto char payload_length;

   //paledon(Tx_led);
   payload_length = 4;

    pkt[0] = MAVLINK_STX; //Mavlink Header
    pkt[1] = payload_length; //Payload length
    pkt[2] = packet_sequence; //Packet sequence
    pkt[3] = mavlink_system.sysid; //System ID
    pkt[4] = mavlink_system.compid; //Component ID
    pkt[5] = MAVLINK_MSG_ID_MISSION_REQUEST; //Message ID

    memcpy(&pkt[6],&cmd_number,2);
    pkt[8] = g_mavlink_target_sysid; ///< System ID
    pkt[9] = g_mavlink_target_compid; ///< Component ID

    checksum = crc_calculate((uint8_t*)((void*)pkt), payload_length + MAVLINK_CORE_HEADER_LEN);
    crc_accumulate(g_crc_seeds[MAVLINK_MSG_ID_MISSION_REQUEST],&checksum); //add seed
    pkt[10] = (uint8_t)(checksum & 0xFF);//0x36; 	//chk_a
    pkt[11] = (uint8_t)(checksum >> 8);//0x83;  //chk_b


#ifdef USE_HIL
   write_packet(&pkt[0],payload_length,SERIAL_PORT_A);
#else
   write_packet(&pkt[0],payload_length,SERIAL_PORT_F);
#endif
   packet_sequence++;
   //paledoff(Tx_led);
}//end mavlink_msg_mission_rqst_send

